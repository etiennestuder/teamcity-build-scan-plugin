plugins {
    id 'groovy'
    id 'io.github.rodm.teamcity-agent'
}

repositories {
    mavenCentral()
}

configurations {
    mvnExtensions {
        canBeConsumed = false
        canBeResolved = true
    }
}

dependencies {
    mvnExtensions project(path: ':agent:service-message-maven-extension', configuration: 'mvnExtension')
    mvnExtensions 'com.gradle:gradle-enterprise-maven-extension:1.17.4'
    mvnExtensions 'com.gradle:common-custom-user-data-maven-extension:1.12'

    testImplementation gradleTestKit()
    testImplementation ('io.ratpack:ratpack-groovy-test:1.10.0-milestone-10') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.15.2'
    testImplementation('org.spockframework:spock-core:2.3-groovy-3.0')
    testImplementation('org.spockframework:spock-junit4:2.3-groovy-3.0')
}

processResources {
    from configurations.mvnExtensions
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
        vendor = JvmVendorSpec.BELLSOFT
    }
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
        String javaCompilerVersion = findProperty('javaCompilerVersion') ?: '8'
        languageVersion = JavaLanguageVersion.of(javaCompilerVersion)
    }
}

teamcity {
    agent {
        archiveName = 'teamcity-build-scan-plugin-agent.zip'
        descriptor {
            pluginDeployment {
                useSeparateClassloader = true
            }
        }
    }
}
